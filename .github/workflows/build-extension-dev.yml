# This is a basic workflow to help you get started with Actions

name: Release Extension Development

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths:
    - 'arm-ttk-extension-xplatform/*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Checkout
      uses: actions/checkout@v2.0.0
      with:
        # Repository name with owner. For example, actions/checkout
        repository: Azure/arm-ttk
        path: ttk_files

    - name: run number with offset
      env:
          NUM: ${{ github.run_number }}
      run: |
          echo "offset_build_number=$(($NUM+38))" >> $GITHUB_ENV
    - run: |
          echo "${{env.offset_build_number}}"
    - name: Copy file
      run: |
        rm -r arm-ttk-extension-xplatform/arm-ttk/testcases/
        cp -r ttk_files/arm-ttk/testcases/ arm-ttk-extension-xplatform/arm-ttk/testcases/       
    - name: Replace Text In Exension JSON
      uses: datamonsters/replace-action@v2
      with:
        # Files, comma-separated. Supposed PLACEHOLDER in them
        files: vss-extension-dev.json
        # Comma-separated pairs PLACEHOLDER=value
        replacements: $buildnumber$=${{env.offset_build_number}}
    - name: Replace Text in task.json
      uses: datamonsters/replace-action@v2
      with:
        # Files, comma-separated. Supposed PLACEHOLDER in them
        files: arm-ttk-extension-xplatform/task.json
        # Comma-separated pairs PLACEHOLDER=value
        replacements: $taskid$=3b3d3273-f60c-4ccd-802e-cbf72d45d167, $taskname$=RunARMTTKTestsXPlatDev, $taskdisplayname$=Dev
    - name: create package
      run: |
        cd arm-ttk-extension-xplatform
        npm install
        tsc
        cd ..
        npx tfx-cli extension create --manifest-globs vss-extension-dev.json
    - name: Upload artifact
      uses: actions/upload-artifact@v4.0.0
      with:
        # Artifact name
        name: extension
        path: Sam-Cogan.ARMTTKExtensionXPlatform-Dev-1.0.${{env.offset_build_number}}.vsix
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4.0.0
      with:
        name: extension
    - name: run number with offset
      env:
          NUM: ${{ github.run_number }}
      run: |
          echo "offset_build_number=$(($NUM+38))" >> $GITHUB_ENV
    - name: publish-extension
      run: |
        ls
        npx tfx-cli extension publish --vsix Sam-Cogan.ARMTTKExtensionXPlatform-Dev-1.0.${{env.offset_build_number}}.vsix --token ${{secrets.marketplace_pat}}
        
